/*
 
 Github Project page: https://github.com/sancowinx/literallycss

 **** CONTENTS ****

 * FONTS SETTINGS -                 Setting a font based on OS of client. Or use Open Sans.

 * BACKGROUNDS  -                   Generic Background helpers

 * IMAGE UTILITIES -                Image utilities class

 * MARGIN-PADDING UTILS -           presets of margin,padding utilities class
                                    LOCKED AT 15PX

 * BORDER -                         All border setting

 * POSITIONING & WIDTH-HEIGHT -     Positioning, Width and height helpers

 * TEXT ALIGNMENT & MANIPULATION -  Text alignment: left, right, center, justify, inherit;
                                    also manipulation like no selection

 * DISPLAY HELPERS -                Including display type, visibility, and overflow

 * OTHER UTILITIES -                Other utilities classes like no list bullet, opacity

*/





/*====================================*\
    #FONTS SETTINGS @fonts-settings
\*====================================*/


/* font-import */

@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800);
@import url(http://fonts.googleapis.com/css?family=Roboto:400,100,300,700);

/* Font options */

.font-os-sans-serif { font-family: 'Segoe UI', 'Helvetica Neue', Arial, Helvetica, sans-serif; }
.font-opensans      { font-family: 'Open Sans', sans-serif; }
.font-roboto        { font-family: 'Roboto', sans-serif;    }


/* font style */

.font-style_normal  { font-style: normal;   }


/* font variant: normal, small-cap, default */

.font-variant_normal      { font-variant: normal;     }
.font-variant_small-caps  { font-variant: small-caps; }
.font-variant_initial     { font-variant: initial;    }





/*====================================*\
    #BACKGROUNDS  @backgrounds
\*====================================*/


.bg_white {
  background: #FFFFFF;
       color: #000000;
}

.bg_black {
  background: #000000;
       color: #ffffff;
}

.bg_grey {
  background: #3E3F3E;
       color: #ffffff;
}

.bg_bashgreenblack {
  background: #000000;
       color: #00ff00;
}





/*====================================*\
    #IMAGE UTILITIES @image-utilities
\*====================================*/


.bg_responsive {
  /*no repeating, positioning top-center*/
  -webkit-background-size:    cover;          /*webkit apple*/
     -moz-background-size:    cover;          /*mozilla firefox*/
       -o-background-size:    cover;          /*opera*/
          background-size:    cover;
               min-height:    400px;
}

/* image filtering (CSS3) */


.filterimage_opacity-half {
  -webkit-filter: opacity(.5);
          filter: opacity(.5);
}

.filterimage_opacity-none {
  -webkit-filter: opacity(0);
          filter: opacity(0);
}

.filterimage_grayscale { 
  -webkit-filter: grayscale(1);
          filter: grayscale(1);
}

.filterimage_sepia {
  -webkit-filter: sepia(1);
          filter: sepia(1);
}

.filterimage_brighten {
  background: #ffffff;
     opacity: .75;
}

.filterimage_negative {
  -webkit-filter: invert(1);
          filter: invert(1);
}


/* Object-fit */
/* Object-fit will set the image fit within the given 
  dimension (width-height) 
  e.g. img elements was fixed to the width: 500px and height: 500px;
       if you called object-fit rules below. It will resize the image
       as the rules was named.

  NOTE: DIMENSION (width, height) MUST BE SPECIFIED 
  IN ORDER TO MAKE object-fit WORKS!;

*/

.imagefit_stretches { 
  object-fit: fill;
    overflow: hidden;
}
.imagefit_contained {
  object-fit: contain;
    overflow: hidden;
}
.imagefit_cover {
  object-fit: cover;
    overflow: hidden;
}
.imagefit_scaled {
  object-fit: scale-down;
    overflow: hidden;
}
.imagefit_none {
  object-fit: none;
    overflow: hidden;
}
.imagefit_unset {
  object-fit: unset;
    overflow: hidden;
}
.imagefit_initial {
  object-fit: initial;
    overflow: hidden;
}


/* Zooming effects @imagezoom*/

/*
   Zooming effects requires any container to indicate the border of the 
   container of all elements/tags inside to limit its content not overlapping
   or overflow to another elements (like image on each side left/right)
   , in this case it's image tag.

   For Example
   <div class="image-zooming-container">
     <img src="..."/>
   </div>
*/

.zoom-image-inside {  overflow: hidden; }

.zoom-image-inside img {
  -webkit-transition: 1s ease-in-out;
     -moz-transition: 1s ease-in-out;
      -ms-transition: 1s ease-in-out;
       -o-transition: 1s ease-in-out;
          transition: 1s ease-in-out;
}

.zoom-image-inside img:hover {
  -webkit-transform: scale(1.2);
     -moz-transform: scale(1.2);
      -ms-transform: scale(1.2);
       -o-transform: scale(1.2);
          transform: scale(1.2);
}


/* Shadow */
/* - Adds little shadow to the image */

.image_addshadow { box-shadow: 1px 1px 5px #000000; }





/*====================================*\
    #MARGIN-PADDING UTILS 
    @margin-padding-utils
\*====================================*/


.margin_topbottom-15px {
  margin-top:      15px;
  margin-bottom:   15px;
}

.margin_leftright-15px {
  margin-right:    15px;
  margin-left:     15px;
}

.padding_topbottom-15px {
  padding-top:     15px;
  padding-bottom:  15px;
}

.padding_leftright-15px  {
  padding-left:    15px;
  padding-right:   15px;
}

/* Negative margin */

.margin-minus_topbottom-15px {
  margin-top:     -15px;
  margin-bottom:  -15px;
}

.margin-minus_leftright-15px {
  margin-left:    -15px;
  margin-right:   -15px;
}


/* Zero padding/margin side (vertical / horizontal) */

.no-margin_topbottom {
  margin-top:      0 !important;
  margin-bottom:   0 !important;
}

.no-margin_leftright {
  margin-left:     0 !important;
  margin-right:    0 !important;
}

.no-padding_topbottom {
  padding-top:     0 !important;
  padding-bottom:  0 !important;
}

.no-padding_leftright {
  padding-left:    0 !important;
  padding-right:   0 !important;
}

/*Zero padding/margin all side */

.no-padding { padding:    0 !important; }
.no-margin  { margin:     0 !important; }





/*====================================*\
    #BORDER @border
\*====================================*/


.border_none        { border-style: dotted; }
.border_dotted      { border-style: dashed; }
.border_solid       { border-style: solid;  }
.border_double      { border-style: double; }


/* Radius */

.border_allrounded  { border-radius:  25px !important;  }
.border_allsquared  { border-radius:  0    !important;  }

/* border-box */

.border_box         { box-sizing: border-box !important;  }





/*====================================*\
    #POSITIONING & WIDTH-HEIGHT 
    @positioning-width-height
\*====================================*/


.fixed              {   position:   fixed;      }
.relative           {   position:   relative;   }
.absolute           {   position:   absolute;   }


/* Intended to use with absolute positioning */

.position-top       {   top:    0;  }
.position-bottom    {   bottom: 0;  }
.position-right     {   right:  0;  }
.position-left      {   left:   0;  }


/* Inheritor for positioning nested elements */

.inherit_min-height {   min-height: inherit;  }
.inherit_min-width  {   min-width:  inherit;  }

.inherit_max-height {   max-height: inherit;  }
.inherit_max-width  {   max-width:  inherit;  }

.inherit_height     {   height:     inherit;  }
.inherit_width      {   width:      inherit;  }

.min-height_full    {   min-height: 100%;     }
.min-width_full     {   min-width:  100%;     }

.max-height_full    {   max-height: 100%;     }
.max-width_full     {   max-width:  100%;     }

.height_full        {   height:     100%;     }
.width_full         {   width:      100%;     }

/* basically same as above but to be easier to read*/

.height_fitcontent  {   height:     100%;     }
.width_fitcontent   {   width:      100%;     }


.min-height_half    {   min-height: 50%;      }
.min-width_half     {   min-width:  50%;      }

.max-height_half    {   max-height: 50%;      }
.max-width_half     {   max-width:  50%;      }

.height_half        {   height:     50%;      }
.width_half         {   width:      50%;      }

.height_auto        {   height:     auto;     }
.width_auto         {   width:      auto;     }


/* float elements */

.float_left     {   float: left;    }
.float_right    {   float: right;   }





/*====================================*\
    #TEXT ALIGNMENT & MANIPULATION  
    @textalignment-manipulation
\*====================================*/


/* text alignment */

.text-align_left          { text-align:   left;     }
.text-align_right         { text-align:   right;    }
.text-align_center        { text-align:   center;   }
.text-align_justify       { text-align:   justify;  }


/* word wrapping*/
/*webcreatorbox.com/en/tutorials/css-tips-for-text*/

.wraptext { word-wrap:  break-word; }   


/* text overflow */

.textcontent_clip     { text-overflow:  clip;       }
.textcontent_ellipse  { text-overflow:  ellipsis;   }


/* strikethrough */

.strikethrough-text { text-decoration: line-through;  }


/* cleartext */

.clear_left   { clear: left;  }
.clear_right  { clear: right; }
.clear_both   { clear: both;  }


/* cursor */

.cursor_crosshair   { cursor: crosshair;   }
.cursor_default     { cursor: default;     }
.cursor_help        { cursor: help;        }
.cursor_notallowed  { cursor: not-allowed; }
.cursor_none        { cursor: none;        }
.cursor_finger      { cursor: pointer;     }
.cursor_processing  { cursor: progress;    }
.cursor_text        { cursor: text;        }
.cursor_loading     { cursor: wait;        }
.cursor_zoomin      { cursor: zoom-in;     }
.cursor_zoomout     { cursor: zoom-out;    }


/* text highlights */
/*  
    Suppressing fallback warning
    - not all browser support rgba

    https://css-tricks.com/rgba-browser-support/
*/

.highlight-text_black {
  background: rgb(0,0,0);
  background: rgba(0,0,0,1);
}

.highlight-text_terminalgreen {
  background: rgb(0,255,0);
  background: rgba(0,255,0,1);
}

.highlight-text_cyan {
  background: rgb(0,255,255);
  background: rgba(0,255,255,0.8);
}

.highlight-text_magneta {
  background: rgb(255,0,255);
  background: rgba(255,0,255,0.8);
}

.highlight-text_yellow {
  background: rgb(255,255,0);
  background: rgba(255,255,0,0.8);
}

.highlight-text_gray {
  background: rgb(128,128,128);
  background: rgba(128,128,128,0.8);
}

.highlight-text_red {
  background: rgb(255,0,0);
  background: rgba(255,0,0,0.8);
}

.highlight-text_green {
  background: rgb(0,128,0);
  background: rgba(0,128,0,0.8);
}

.highlight-text_blue {
  background: rgb(0,0,255);
  background: rgba(0,0,255,0.8);
}

.highlight-text_pink {
  background: rgb(255,192,203);
  background: rgba(255,192,203,0.8);
}

.highlight-text_orange {
  background: rgb(255,165,0);
  background: rgba(255,165,0,0.8);
}

.highlight-text_violet {
  background: rgb(238,130,238);
  background: rgba(238,130,238,0.8);
}

.highlight-text_purple {
  background: rgb(128,0,128);
  background: rgba(128,0,128,0.8);
}

.highlight-text_gold {
  background: rgb(255,215,0);
  background: rgba(255,215,0,0.8);
}

.highlight-text_brown {
  background: rgb(165,42,42);
  background: rgba(165,42,42,0.8);
}

.highlight-text_khaki {
  background: rgb(240,230,140);
  background: rgba(240,230,140,0.8);
}

.highlight-text_yellowgreen {
  background: rgb(154,205,50);
  background: rgba(154,205,50,0.8);
}



/* spoiler */

.spoiler {
  background: #000000;
       color: #000000;
}

.spoiler:hover {
  background: transparent;
       color: inherit;
}


/* anti-aliasing text, make font smooter */
/* as of CSS3 draft documents, this is still draft, not standarized */
/* only webkit(safari,chrome) and moz(firefox) */
/* default of font-smooting is "subpixel-antialiased"  */

.smoothen-text {
  -webkit-font-smoothing: antialiased;
     -moz-font-smoothing: antialiased;
}


/* Text selection disabled */

.text-selection_disable {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
       -o-user-select: none;
          user-select: none;
}





/*====================================*\
    #DISPLAY HELPERS @display-helpers
\*====================================*/


/* common display settings */

.display_nothing                  { display: none;         }
.display_block                    { display: block;        }
.display_inline                   { display: inline;       }
.display_inline-block             { display: inline-block; }
.display_inline-table             { display: inline-table; }
.display_as-list                  { display: list-item;    }
.display_tablecell                { display: table-cell;   }


/* Normally, inline elements (suchas anchor "<a>") does not have 
   height and width element. To make it resizable, set to
   `display: inline-block`

   or use below CSS class.
*/

.resizable-inline-element         { display: inline-block !important; }


/* overflow */

.hide-content-outofbound          { overflow: hidden;       }
.scroll-content-outofbound        { overflow: scroll;       }
.visible-scrollbar                { overflow: visible;      }


/* visibility */

.show_element                       { visibility: visible;  }
.hide_element                       { visibility: hidden;   }
.collapse_elements                  { visibility: collapse; }


/* blank space */

.space {
  height: 15px;
  width:  auto;
}

.space_large {
  height: 60px;
  width: auto;
}

.space_extra {
  height: 240px;
  width: auto;
}


/* clearfix 
 * dirty clearfix hack
*/

.clearfix { overflow: auto; }



/*====================================*\
    #OTHER UTILITIES  @other-utilities
\*====================================*/


/* list (ul,li): invoke either `ul` or `li` elements */

.no-bullets_list                { list-style-type: none;        }
.circle-bullets_list            { list-style-type: circle;      }
.default-bullets_list           { list-style-type: disc;        }
.square-bullets_list            { list-style-type: square;      }
.number_list                    { list-style-type: decimal;     }
.lowercase-latin_list           { list-style-type: lower-alpha; }
.uppercase-latin_list           { list-style-type: upper-alpha; }
.lowercase-romannumueric_list   { list-style-type: lower-roman; }
.uppercase-romannumueric_list   { list-style-type: upper-roman; }


/* opacity */

.opacity_none { opacity: 0;   }
.opacity_half { opacity: .5;  }


/* z-index order */

.order_front    { z-index: 666;      }
.order_default  { z-index: initial;  }
.order_inherit  { z-index: inherit;  }


/* transition */

.transition_default     { transition-timing-function: initial;      }
.transition_linear      { transition-timing-function: linear;       }
.transition_easein      { transition-timing-function: ease-in;      }
.transition_easeout     { transition-timing-function: ease-out;     }
.transition_easeinout   { transition-timing-function: ease-in-out;  }


/* rotate element */

.transform_rotate-clockwise-90 {
  -webkit-transform: rotate(-90deg);
     -moz-transform: rotate(-90deg);
      -ms-transform: rotate(-90deg);
       -o-transform: rotate(-90deg);
          transform: rotate(-90deg);
}


.transform_rotate-counterclockwise-90 {
  -webkit-transform: rotate(90deg);
     -moz-transform: rotate(90deg);
      -ms-transform: rotate(90deg);
       -o-transform: rotate(90deg);
          transform: rotate(90deg);
}


/* scale up elements */

.transform_scaleup {
  -webkit-transform: scale(1.2);
     -moz-transform: scale(1.2);
      -ms-transform: scale(1.2);
       -o-transform: scale(1.2);
          transform: scale(1.2);
}


/* resizing element */

.resize_vertical {
    resize: vertical;
  overflow: auto;
}

.resize_horizontal {
    resize: horizontal;
  overflow: auto;
}

.resize_both {
    resize: both;
  overflow: auto;
}

.resize_none {
    resize: none;
  overflow: auto;
}


/* solid line */

.solid-horizontal-line { border-bottom: 2px solid #000000; }